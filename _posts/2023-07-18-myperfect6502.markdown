---
layout: post
title:  "My Perfect 6502"
date:   2023-07-18 18:11:36 +0100
categories: 6502 retro
---
My current hobby project is to create a 6502 development IDE using the Godot game engine. Part of that process is creating a 6502 emulation core which can be tested against a 'real' 6502... enter [perfect6502][perfect6502-repo].

perfect6502 is a netlist transistor level simulation of a real 6502 CPU, so it's about as accurate as you're going to get without hooking up a real 6502 chip to an oscilloscope. Now me being a picky bugger I want perfect6502 to do stuff which it currently doesn't, and I also want it to run faster... so I thought I'd grab a copy and refactor the hell out of it so that it fits my purpose... enter myperfect6502.

So far I've moved to CMake from Make, moved it to C++ and STL containers rather than C and memory buffers... and I've managed to squeeze a bit more performance out if it (with more to come). Once I get my head fully around how it works and I'm happy with stuff I'm going to port it to GDScript and make it a Godot addon... well, that's the plan anyway. Stay tuned...

A happy side-quest for all this is learning how to use gprof and valgrind... which will be a nice bit of experience to pick up. I've done a lot of perf work in the day job but that is 99% console based where the tools are all nice and glossy... I've not had the urge to do perf work in Linux yet... but now I do. Yay.

[perfect6502-repo]: https://github.com/mist64/perfect6502
